# yaml

config_vars: @CONFIG_VAR_PATH@

components_manager:
    coro_pool:
        initial_size: 500             # Preallocate 500 coroutines at startup.
        max_size: 1000                # Do not keep more than 1000 preallocated coroutines.

    task_processors:                  # Task processor is an executor for coroutine tasks

        main-task-processor:          # Make a task processor for CPU-bound couroutine tasks.
            worker_threads: $worker-threads         # Process tasks in 4 threads.
            thread_name: main-worker  # OS will show the threads of this task processor with 'main-worker' prefix.

        fs-task-processor:            # Make a separate task processor for filesystem bound tasks.
            thread_name: fs-worker
            worker_threads: $worker-fs-threads

    default_task_processor: main-task-processor

    components:                       # Configuring components that were registered via component_list
        server:
            listener:                 # configuring the main listening socket...
                port: $server-port            # ...to listen on this port and...
                task_processor: main-task-processor    # ...process incoming requests on this task processor.
        logging:
            fs-task-processor: fs-task-processor
            loggers:
                default:
                    file_path: '@stderr'
                    level: $logger-level
                    overflow_behavior: discard  # Drop logs if the system is too busy to write them down.

        tracer:                              # Component that helps to trace execution times and requests in logs.
            service-name: chess_game   # "You know. You all know exactly who I am. Say my name. " (c)

        dynamic-config:                      # Dynamic config storage options, do nothing
            fs-cache-path: ''
        dynamic-config-fallbacks:            # Load options from file and push them into the dynamic config storage.
            fallback-path: @CONFIG_FALLBACK_PATH@
        testsuite-support: {}
        key-value-database:
            groups:
              - config_name: taxi-tmp  # Key to lookup in secdist configuration
                db: taxi-tmp           # Name to refer to the cluster in components::Redis::GetClient()

            subscribe_groups:  # Array of redis clusters to work with in subscribe mode

            thread_pools:
                redis_thread_pool_size: 8
                sentinel_thread_pool_size: 1

        secdist: {}                                      # Component that stores configuration of hosts and passwords
        default-secdist-provider:                        # Component that loads configuration of hosts and passwords
            config: @SECURITY_PATH@  # Values are supposed to be stored in this file
            missing-ok: true                             # ... but if the file is missing it is still ok
            environment-secrets-key: SECDIST_CONFIG      # ... values will be loaded from this environment value

        http-client:
            load-enabled: $is_testing
            fs-task-processor: fs-task-processor

        tests-control:
            load-enabled: $is_testing
            path: /tests/{action}
            method: POST
            task_processor: main-task-processor
        handler-ping:
            path: /ping
            method: GET
            task_processor: main-task-processor
            throttling_enabled: false
            url_trailing_slash: strict-match

        handler-hello:                    # Finally! Our handler.
            path: /hello                  # Registering handler by URL '/hello'.
            method: GET,POST              # It will only reply to GET (HEAD) and POST requests.
            task_processor: main-task-processor  # Run it on CPU bound task processor
        handler-make-move:
            path: /v1/{game-id}/move
            method: POST
            task_processor: main-task-processor

        handler-last-move:
             path: /v1/{game-id}/move
             method: GET
             task_processor: main-task-processor

        handler-make-room:
            path: /v1/{game-id}
            method: POST
            task-processor: main-task-processor

        handler-join-room:
            path: /v1/{game-id}/join
            method: POST
            task-processor: main-task-processor